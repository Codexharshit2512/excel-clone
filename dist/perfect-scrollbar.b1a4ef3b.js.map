{"version":3,"sources":["../src/index.js","../src/lib/css.js","../src/lib/dom.js","../src/lib/class-names.js","../src/lib/event-manager.js","../src/process-scroll-diff.js","../src/lib/util.js","../src/update-geometry.js","../src/handlers/drag-thumb.js","../src/handlers/click-rail.js","../src/handlers/keyboard.js","../src/handlers/mouse-wheel.js","../src/handlers/touch.js"],"names":["const","let","this","processScrollDiff","DOM.queryChildren","DOM.remove","CSS.set","DOM.matches","CSS.get","DOM.div"],"mappings":"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","file":"perfect-scrollbar.b1a4ef3b.js","sourceRoot":"..","sourcesContent":["import * as CSS from './lib/css';\nimport * as DOM from './lib/dom';\nimport cls from './lib/class-names';\nimport EventManager from './lib/event-manager';\nimport processScrollDiff from './process-scroll-diff';\nimport updateGeometry from './update-geometry';\nimport { toInt, outerWidth } from './lib/util';\n\nimport clickRail from './handlers/click-rail';\nimport dragThumb from './handlers/drag-thumb';\nimport keyboard from './handlers/keyboard';\nimport wheel from './handlers/mouse-wheel';\nimport touch from './handlers/touch';\n\nconst defaultSettings = () => ({\n  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],\n  maxScrollbarLength: null,\n  minScrollbarLength: null,\n  scrollingThreshold: 1000,\n  scrollXMarginOffset: 0,\n  scrollYMarginOffset: 0,\n  suppressScrollX: false,\n  suppressScrollY: false,\n  swipeEasing: true,\n  useBothWheelAxes: false,\n  wheelPropagation: true,\n  wheelSpeed: 1,\n});\n\nconst handlers = {\n  'click-rail': clickRail,\n  'drag-thumb': dragThumb,\n  keyboard,\n  wheel,\n  touch,\n};\n\nexport default class PerfectScrollbar {\n  constructor(element, userSettings = {}) {\n    if (typeof element === 'string') {\n      element = document.querySelector(element);\n    }\n\n    if (!element || !element.nodeName) {\n      throw new Error('no element is specified to initialize PerfectScrollbar');\n    }\n\n    this.element = element;\n\n    element.classList.add(cls.main);\n\n    this.settings = defaultSettings();\n    for (const key in userSettings) {\n      this.settings[key] = userSettings[key];\n    }\n\n    this.containerWidth = null;\n    this.containerHeight = null;\n    this.contentWidth = null;\n    this.contentHeight = null;\n\n    const focus = () => element.classList.add(cls.state.focus);\n    const blur = () => element.classList.remove(cls.state.focus);\n\n    this.isRtl = CSS.get(element).direction === 'rtl';\n    if (this.isRtl === true) {\n      element.classList.add(cls.rtl);\n    }\n    this.isNegativeScroll = (() => {\n      const originalScrollLeft = element.scrollLeft;\n      let result = null;\n      element.scrollLeft = -1;\n      result = element.scrollLeft < 0;\n      element.scrollLeft = originalScrollLeft;\n      return result;\n    })();\n    this.negativeScrollAdjustment = this.isNegativeScroll\n      ? element.scrollWidth - element.clientWidth\n      : 0;\n    this.event = new EventManager();\n    this.ownerDocument = element.ownerDocument || document;\n\n    this.scrollbarXRail = DOM.div(cls.element.rail('x'));\n    element.appendChild(this.scrollbarXRail);\n    this.scrollbarX = DOM.div(cls.element.thumb('x'));\n    this.scrollbarXRail.appendChild(this.scrollbarX);\n    this.scrollbarX.setAttribute('tabindex', 0);\n    this.event.bind(this.scrollbarX, 'focus', focus);\n    this.event.bind(this.scrollbarX, 'blur', blur);\n    this.scrollbarXActive = null;\n    this.scrollbarXWidth = null;\n    this.scrollbarXLeft = null;\n    const railXStyle = CSS.get(this.scrollbarXRail);\n    this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);\n    if (isNaN(this.scrollbarXBottom)) {\n      this.isScrollbarXUsingBottom = false;\n      this.scrollbarXTop = toInt(railXStyle.top);\n    } else {\n      this.isScrollbarXUsingBottom = true;\n    }\n    this.railBorderXWidth =\n      toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);\n    // Set rail to display:block to calculate margins\n    CSS.set(this.scrollbarXRail, { display: 'block' });\n    this.railXMarginWidth =\n      toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);\n    CSS.set(this.scrollbarXRail, { display: '' });\n    this.railXWidth = null;\n    this.railXRatio = null;\n\n    this.scrollbarYRail = DOM.div(cls.element.rail('y'));\n    element.appendChild(this.scrollbarYRail);\n    this.scrollbarY = DOM.div(cls.element.thumb('y'));\n    this.scrollbarYRail.appendChild(this.scrollbarY);\n    this.scrollbarY.setAttribute('tabindex', 0);\n    this.event.bind(this.scrollbarY, 'focus', focus);\n    this.event.bind(this.scrollbarY, 'blur', blur);\n    this.scrollbarYActive = null;\n    this.scrollbarYHeight = null;\n    this.scrollbarYTop = null;\n    const railYStyle = CSS.get(this.scrollbarYRail);\n    this.scrollbarYRight = parseInt(railYStyle.right, 10);\n    if (isNaN(this.scrollbarYRight)) {\n      this.isScrollbarYUsingRight = false;\n      this.scrollbarYLeft = toInt(railYStyle.left);\n    } else {\n      this.isScrollbarYUsingRight = true;\n    }\n    this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;\n    this.railBorderYWidth =\n      toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);\n    CSS.set(this.scrollbarYRail, { display: 'block' });\n    this.railYMarginHeight =\n      toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);\n    CSS.set(this.scrollbarYRail, { display: '' });\n    this.railYHeight = null;\n    this.railYRatio = null;\n\n    this.reach = {\n      x:\n        element.scrollLeft <= 0\n          ? 'start'\n          : element.scrollLeft >= this.contentWidth - this.containerWidth\n          ? 'end'\n          : null,\n      y:\n        element.scrollTop <= 0\n          ? 'start'\n          : element.scrollTop >= this.contentHeight - this.containerHeight\n          ? 'end'\n          : null,\n    };\n\n    this.isAlive = true;\n\n    this.settings.handlers.forEach(handlerName => handlers[handlerName](this));\n\n    this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only\n    this.lastScrollLeft = element.scrollLeft; // for onScroll only\n    this.event.bind(this.element, 'scroll', e => this.onScroll(e));\n    updateGeometry(this);\n  }\n\n  update() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    // Recalcuate negative scrollLeft adjustment\n    this.negativeScrollAdjustment = this.isNegativeScroll\n      ? this.element.scrollWidth - this.element.clientWidth\n      : 0;\n\n    // Recalculate rail margins\n    CSS.set(this.scrollbarXRail, { display: 'block' });\n    CSS.set(this.scrollbarYRail, { display: 'block' });\n    this.railXMarginWidth =\n      toInt(CSS.get(this.scrollbarXRail).marginLeft) +\n      toInt(CSS.get(this.scrollbarXRail).marginRight);\n    this.railYMarginHeight =\n      toInt(CSS.get(this.scrollbarYRail).marginTop) +\n      toInt(CSS.get(this.scrollbarYRail).marginBottom);\n\n    // Hide scrollbars not to affect scrollWidth and scrollHeight\n    CSS.set(this.scrollbarXRail, { display: 'none' });\n    CSS.set(this.scrollbarYRail, { display: 'none' });\n\n    updateGeometry(this);\n\n    processScrollDiff(this, 'top', 0, false, true);\n    processScrollDiff(this, 'left', 0, false, true);\n\n    CSS.set(this.scrollbarXRail, { display: '' });\n    CSS.set(this.scrollbarYRail, { display: '' });\n  }\n\n  onScroll(e) {\n    if (!this.isAlive) {\n      return;\n    }\n\n    updateGeometry(this);\n    processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);\n    processScrollDiff(\n      this,\n      'left',\n      this.element.scrollLeft - this.lastScrollLeft\n    );\n\n    this.lastScrollTop = Math.floor(this.element.scrollTop);\n    this.lastScrollLeft = this.element.scrollLeft;\n  }\n\n  destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    this.event.unbindAll();\n    DOM.remove(this.scrollbarX);\n    DOM.remove(this.scrollbarY);\n    DOM.remove(this.scrollbarXRail);\n    DOM.remove(this.scrollbarYRail);\n    this.removePsClasses();\n\n    // unset elements\n    this.element = null;\n    this.scrollbarX = null;\n    this.scrollbarY = null;\n    this.scrollbarXRail = null;\n    this.scrollbarYRail = null;\n\n    this.isAlive = false;\n  }\n\n  removePsClasses() {\n    this.element.className = this.element.className\n      .split(' ')\n      .filter(name => !name.match(/^ps([-_].+|)$/))\n      .join(' ');\n  }\n}\n","export function get(element) {\n  return getComputedStyle(element);\n}\n\nexport function set(element, obj) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n","export function div(className) {\n  const div = document.createElement('div');\n  div.className = className;\n  return div;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches ||\n    Element.prototype.webkitMatchesSelector ||\n    Element.prototype.mozMatchesSelector ||\n    Element.prototype.msMatchesSelector);\n\nexport function matches(element, query) {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\nexport function remove(element) {\n  if (element.remove) {\n    element.remove();\n  } else {\n    if (element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  }\n}\n\nexport function queryChildren(element, selector) {\n  return Array.prototype.filter.call(element.children, child =>\n    matches(child, selector)\n  );\n}\n","const cls = {\n  main: 'ps',\n  rtl: 'ps__rtl',\n  element: {\n    thumb: x => `ps__thumb-${x}`,\n    rail: x => `ps__rail-${x}`,\n    consuming: 'ps__child--consume',\n  },\n  state: {\n    focus: 'ps--focus',\n    clicking: 'ps--clicking',\n    active: x => `ps--active-${x}`,\n    scrolling: x => `ps--scrolling-${x}`,\n  },\n};\n\nexport default cls;\n\n/*\n * Helper methods\n */\nconst scrollingClassTimeout = { x: null, y: null };\n\nexport function addScrollingClass(i, x) {\n  const classList = i.element.classList;\n  const className = cls.state.scrolling(x);\n\n  if (classList.contains(className)) {\n    clearTimeout(scrollingClassTimeout[x]);\n  } else {\n    classList.add(className);\n  }\n}\n\nexport function removeScrollingClass(i, x) {\n  scrollingClassTimeout[x] = setTimeout(\n    () => i.isAlive && i.element.classList.remove(cls.state.scrolling(x)),\n    i.settings.scrollingThreshold\n  );\n}\n\nexport function setScrollingClassInstantly(i, x) {\n  addScrollingClass(i, x);\n  removeScrollingClass(i, x);\n}\n","class EventElement {\n  constructor(element) {\n    this.element = element;\n    this.handlers = {};\n  }\n\n  bind(eventName, handler) {\n    if (typeof this.handlers[eventName] === 'undefined') {\n      this.handlers[eventName] = [];\n    }\n    this.handlers[eventName].push(handler);\n    this.element.addEventListener(eventName, handler, false);\n  }\n\n  unbind(eventName, target) {\n    this.handlers[eventName] = this.handlers[eventName].filter(handler => {\n      if (target && handler !== target) {\n        return true;\n      }\n      this.element.removeEventListener(eventName, handler, false);\n      return false;\n    });\n  }\n\n  unbindAll() {\n    for (const name in this.handlers) {\n      this.unbind(name);\n    }\n  }\n\n  get isEmpty() {\n    return Object.keys(this.handlers).every(\n      key => this.handlers[key].length === 0\n    );\n  }\n}\n\nexport default class EventManager {\n  constructor() {\n    this.eventElements = [];\n  }\n\n  eventElement(element) {\n    let ee = this.eventElements.filter(ee => ee.element === element)[0];\n    if (!ee) {\n      ee = new EventElement(element);\n      this.eventElements.push(ee);\n    }\n    return ee;\n  }\n\n  bind(element, eventName, handler) {\n    this.eventElement(element).bind(eventName, handler);\n  }\n\n  unbind(element, eventName, handler) {\n    const ee = this.eventElement(element);\n    ee.unbind(eventName, handler);\n\n    if (ee.isEmpty) {\n      // remove\n      this.eventElements.splice(this.eventElements.indexOf(ee), 1);\n    }\n  }\n\n  unbindAll() {\n    this.eventElements.forEach(e => e.unbindAll());\n    this.eventElements = [];\n  }\n\n  once(element, eventName, handler) {\n    const ee = this.eventElement(element);\n    const onceHandler = evt => {\n      ee.unbind(eventName, onceHandler);\n      handler(evt);\n    };\n    ee.bind(eventName, onceHandler);\n  }\n}\n","import { setScrollingClassInstantly } from './lib/class-names';\n\nfunction createEvent(name) {\n  if (typeof window.CustomEvent === 'function') {\n    return new CustomEvent(name);\n  } else {\n    const evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(name, false, false, undefined);\n    return evt;\n  }\n}\n\nexport default function(\n  i,\n  axis,\n  diff,\n  useScrollingClass = true,\n  forceFireReachEvent = false\n) {\n  let fields;\n  if (axis === 'top') {\n    fields = [\n      'contentHeight',\n      'containerHeight',\n      'scrollTop',\n      'y',\n      'up',\n      'down',\n    ];\n  } else if (axis === 'left') {\n    fields = [\n      'contentWidth',\n      'containerWidth',\n      'scrollLeft',\n      'x',\n      'left',\n      'right',\n    ];\n  } else {\n    throw new Error('A proper axis should be provided');\n  }\n\n  processScrollDiff(i, diff, fields, useScrollingClass, forceFireReachEvent);\n}\n\nfunction processScrollDiff(\n  i,\n  diff,\n  [contentHeight, containerHeight, scrollTop, y, up, down],\n  useScrollingClass = true,\n  forceFireReachEvent = false\n) {\n  const element = i.element;\n\n  // reset reach\n  i.reach[y] = null;\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] < 1) {\n    i.reach[y] = 'start';\n  }\n\n  // 1 for subpixel rounding\n  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {\n    i.reach[y] = 'end';\n  }\n\n  if (diff) {\n    element.dispatchEvent(createEvent(`ps-scroll-${y}`));\n\n    if (diff < 0) {\n      element.dispatchEvent(createEvent(`ps-scroll-${up}`));\n    } else if (diff > 0) {\n      element.dispatchEvent(createEvent(`ps-scroll-${down}`));\n    }\n\n    if (useScrollingClass) {\n      setScrollingClassInstantly(i, y);\n    }\n  }\n\n  if (i.reach[y] && (diff || forceFireReachEvent)) {\n    element.dispatchEvent(createEvent(`ps-${y}-reach-${i.reach[y]}`));\n  }\n}\n","import * as CSS from './css';\nimport * as DOM from './dom';\n\nexport function toInt(x) {\n  return parseInt(x, 10) || 0;\n}\n\nexport function isEditable(el) {\n  return (\n    DOM.matches(el, 'input,[contenteditable]') ||\n    DOM.matches(el, 'select,[contenteditable]') ||\n    DOM.matches(el, 'textarea,[contenteditable]') ||\n    DOM.matches(el, 'button,[contenteditable]')\n  );\n}\n\nexport function outerWidth(element) {\n  const styles = CSS.get(element);\n  return (\n    toInt(styles.width) +\n    toInt(styles.paddingLeft) +\n    toInt(styles.paddingRight) +\n    toInt(styles.borderLeftWidth) +\n    toInt(styles.borderRightWidth)\n  );\n}\n\nexport const env = {\n  isWebKit:\n    typeof document !== 'undefined' &&\n    'WebkitAppearance' in document.documentElement.style,\n  supportsTouch:\n    typeof window !== 'undefined' &&\n    ('ontouchstart' in window ||\n      ('maxTouchPoints' in window.navigator &&\n        window.navigator.maxTouchPoints > 0) ||\n      (window.DocumentTouch && document instanceof window.DocumentTouch)),\n  supportsIePointer:\n    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,\n  isChrome:\n    typeof navigator !== 'undefined' &&\n    /Chrome/i.test(navigator && navigator.userAgent),\n};\n","import * as CSS from './lib/css';\nimport * as DOM from './lib/dom';\nimport cls from './lib/class-names';\nimport { toInt } from './lib/util';\n\nexport default function(i) {\n  const element = i.element;\n  const roundedScrollTop = Math.floor(element.scrollTop);\n  const rect = element.getBoundingClientRect();\n\n  i.containerWidth = Math.ceil(rect.width);\n  i.containerHeight = Math.ceil(rect.height);\n  i.contentWidth = element.scrollWidth;\n  i.contentHeight = element.scrollHeight;\n\n  if (!element.contains(i.scrollbarXRail)) {\n    // clean up and append\n    DOM.queryChildren(element, cls.element.rail('x')).forEach(el =>\n      DOM.remove(el)\n    );\n    element.appendChild(i.scrollbarXRail);\n  }\n  if (!element.contains(i.scrollbarYRail)) {\n    // clean up and append\n    DOM.queryChildren(element, cls.element.rail('y')).forEach(el =>\n      DOM.remove(el)\n    );\n    element.appendChild(i.scrollbarYRail);\n  }\n\n  if (\n    !i.settings.suppressScrollX &&\n    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth\n  ) {\n    i.scrollbarXActive = true;\n    i.railXWidth = i.containerWidth - i.railXMarginWidth;\n    i.railXRatio = i.containerWidth / i.railXWidth;\n    i.scrollbarXWidth = getThumbSize(\n      i,\n      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)\n    );\n    i.scrollbarXLeft = toInt(\n      ((i.negativeScrollAdjustment + element.scrollLeft) *\n        (i.railXWidth - i.scrollbarXWidth)) /\n        (i.contentWidth - i.containerWidth)\n    );\n  } else {\n    i.scrollbarXActive = false;\n  }\n\n  if (\n    !i.settings.suppressScrollY &&\n    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight\n  ) {\n    i.scrollbarYActive = true;\n    i.railYHeight = i.containerHeight - i.railYMarginHeight;\n    i.railYRatio = i.containerHeight / i.railYHeight;\n    i.scrollbarYHeight = getThumbSize(\n      i,\n      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)\n    );\n    i.scrollbarYTop = toInt(\n      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /\n        (i.contentHeight - i.containerHeight)\n    );\n  } else {\n    i.scrollbarYActive = false;\n  }\n\n  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {\n    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;\n  }\n  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {\n    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;\n  }\n\n  updateCss(element, i);\n\n  if (i.scrollbarXActive) {\n    element.classList.add(cls.state.active('x'));\n  } else {\n    element.classList.remove(cls.state.active('x'));\n    i.scrollbarXWidth = 0;\n    i.scrollbarXLeft = 0;\n    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;\n  }\n  if (i.scrollbarYActive) {\n    element.classList.add(cls.state.active('y'));\n  } else {\n    element.classList.remove(cls.state.active('y'));\n    i.scrollbarYHeight = 0;\n    i.scrollbarYTop = 0;\n    element.scrollTop = 0;\n  }\n}\n\nfunction getThumbSize(i, thumbSize) {\n  if (i.settings.minScrollbarLength) {\n    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);\n  }\n  if (i.settings.maxScrollbarLength) {\n    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);\n  }\n  return thumbSize;\n}\n\nfunction updateCss(element, i) {\n  const xRailOffset = { width: i.railXWidth };\n  const roundedScrollTop = Math.floor(element.scrollTop);\n\n  if (i.isRtl) {\n    xRailOffset.left =\n      i.negativeScrollAdjustment +\n      element.scrollLeft +\n      i.containerWidth -\n      i.contentWidth;\n  } else {\n    xRailOffset.left = element.scrollLeft;\n  }\n  if (i.isScrollbarXUsingBottom) {\n    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;\n  } else {\n    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;\n  }\n  CSS.set(i.scrollbarXRail, xRailOffset);\n\n  const yRailOffset = { top: roundedScrollTop, height: i.railYHeight };\n  if (i.isScrollbarYUsingRight) {\n    if (i.isRtl) {\n      yRailOffset.right =\n        i.contentWidth -\n        (i.negativeScrollAdjustment + element.scrollLeft) -\n        i.scrollbarYRight -\n        i.scrollbarYOuterWidth -\n        9;\n    } else {\n      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;\n    }\n  } else {\n    if (i.isRtl) {\n      yRailOffset.left =\n        i.negativeScrollAdjustment +\n        element.scrollLeft +\n        i.containerWidth * 2 -\n        i.contentWidth -\n        i.scrollbarYLeft -\n        i.scrollbarYOuterWidth;\n    } else {\n      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;\n    }\n  }\n  CSS.set(i.scrollbarYRail, yRailOffset);\n\n  CSS.set(i.scrollbarX, {\n    left: i.scrollbarXLeft,\n    width: i.scrollbarXWidth - i.railBorderXWidth,\n  });\n  CSS.set(i.scrollbarY, {\n    top: i.scrollbarYTop,\n    height: i.scrollbarYHeight - i.railBorderYWidth,\n  });\n}\n","import * as CSS from '../lib/css';\nimport * as DOM from '../lib/dom';\nimport cls, {\n  addScrollingClass,\n  removeScrollingClass,\n} from '../lib/class-names';\nimport updateGeometry from '../update-geometry';\nimport { toInt } from '../lib/util';\n\nexport default function(i) {\n  bindMouseScrollHandler(i, [\n    'containerWidth',\n    'contentWidth',\n    'pageX',\n    'railXWidth',\n    'scrollbarX',\n    'scrollbarXWidth',\n    'scrollLeft',\n    'x',\n    'scrollbarXRail',\n  ]);\n  bindMouseScrollHandler(i, [\n    'containerHeight',\n    'contentHeight',\n    'pageY',\n    'railYHeight',\n    'scrollbarY',\n    'scrollbarYHeight',\n    'scrollTop',\n    'y',\n    'scrollbarYRail',\n  ]);\n}\n\nfunction bindMouseScrollHandler(\n  i,\n  [\n    containerHeight,\n    contentHeight,\n    pageY,\n    railYHeight,\n    scrollbarY,\n    scrollbarYHeight,\n    scrollTop,\n    y,\n    scrollbarYRail,\n  ]\n) {\n  const element = i.element;\n\n  let startingScrollTop = null;\n  let startingMousePageY = null;\n  let scrollBy = null;\n\n  function mouseMoveHandler(e) {\n    if (e.touches && e.touches[0]) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    element[scrollTop] =\n      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);\n    addScrollingClass(i, y);\n    updateGeometry(i);\n\n    e.stopPropagation();\n    e.preventDefault();\n  }\n\n  function mouseUpHandler() {\n    removeScrollingClass(i, y);\n    i[scrollbarYRail].classList.remove(cls.state.clicking);\n    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n  }\n\n  function bindMoves(e, touchMode) {\n    startingScrollTop = element[scrollTop];\n    if (touchMode && e.touches) {\n      e[pageY] = e.touches[0].pageY;\n    }\n    startingMousePageY = e[pageY];\n    scrollBy =\n      (i[contentHeight] - i[containerHeight]) /\n      (i[railYHeight] - i[scrollbarYHeight]);\n    if (!touchMode) {\n      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);\n      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);\n      e.preventDefault();\n    } else {\n      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);\n    }\n\n    i[scrollbarYRail].classList.add(cls.state.clicking);\n\n    e.stopPropagation();\n  }\n\n  i.event.bind(i[scrollbarY], 'mousedown', e => {\n    bindMoves(e);\n  });\n  i.event.bind(i[scrollbarY], 'touchstart', e => {\n    bindMoves(e, true);\n  });\n}\n","import updateGeometry from '../update-geometry';\n\nexport default function(i) {\n  const element = i.element;\n\n  i.event.bind(i.scrollbarY, 'mousedown', e => e.stopPropagation());\n  i.event.bind(i.scrollbarYRail, 'mousedown', e => {\n    const positionTop =\n      e.pageY -\n      window.pageYOffset -\n      i.scrollbarYRail.getBoundingClientRect().top;\n    const direction = positionTop > i.scrollbarYTop ? 1 : -1;\n\n    i.element.scrollTop += direction * i.containerHeight;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n\n  i.event.bind(i.scrollbarX, 'mousedown', e => e.stopPropagation());\n  i.event.bind(i.scrollbarXRail, 'mousedown', e => {\n    const positionLeft =\n      e.pageX -\n      window.pageXOffset -\n      i.scrollbarXRail.getBoundingClientRect().left;\n    const direction = positionLeft > i.scrollbarXLeft ? 1 : -1;\n\n    i.element.scrollLeft += direction * i.containerWidth;\n    updateGeometry(i);\n\n    e.stopPropagation();\n  });\n}\n","import * as DOM from '../lib/dom';\nimport updateGeometry from '../update-geometry';\nimport { isEditable } from '../lib/util';\n\nexport default function(i) {\n  const element = i.element;\n\n  const elementHovered = () => DOM.matches(element, ':hover');\n  const scrollbarFocused = () =>\n    DOM.matches(i.scrollbarX, ':focus') || DOM.matches(i.scrollbarY, ':focus');\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    const scrollTop = Math.floor(element.scrollTop);\n    if (deltaX === 0) {\n      if (!i.scrollbarYActive) {\n        return false;\n      }\n      if (\n        (scrollTop === 0 && deltaY > 0) ||\n        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n\n    const scrollLeft = element.scrollLeft;\n    if (deltaY === 0) {\n      if (!i.scrollbarXActive) {\n        return false;\n      }\n      if (\n        (scrollLeft === 0 && deltaX < 0) ||\n        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)\n      ) {\n        return !i.settings.wheelPropagation;\n      }\n    }\n    return true;\n  }\n\n  i.event.bind(i.ownerDocument, 'keydown', e => {\n    if (\n      (e.isDefaultPrevented && e.isDefaultPrevented()) ||\n      e.defaultPrevented\n    ) {\n      return;\n    }\n\n    if (!elementHovered() && !scrollbarFocused()) {\n      return;\n    }\n\n    let activeElement = document.activeElement\n      ? document.activeElement\n      : i.ownerDocument.activeElement;\n    if (activeElement) {\n      if (activeElement.tagName === 'IFRAME') {\n        activeElement = activeElement.contentDocument.activeElement;\n      } else {\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n      }\n      if (isEditable(activeElement)) {\n        return;\n      }\n    }\n\n    let deltaX = 0;\n    let deltaY = 0;\n\n    switch (e.which) {\n      case 37: // left\n        if (e.metaKey) {\n          deltaX = -i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = -i.containerWidth;\n        } else {\n          deltaX = -30;\n        }\n        break;\n      case 38: // up\n        if (e.metaKey) {\n          deltaY = i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = 30;\n        }\n        break;\n      case 39: // right\n        if (e.metaKey) {\n          deltaX = i.contentWidth;\n        } else if (e.altKey) {\n          deltaX = i.containerWidth;\n        } else {\n          deltaX = 30;\n        }\n        break;\n      case 40: // down\n        if (e.metaKey) {\n          deltaY = -i.contentHeight;\n        } else if (e.altKey) {\n          deltaY = -i.containerHeight;\n        } else {\n          deltaY = -30;\n        }\n        break;\n      case 32: // space bar\n        if (e.shiftKey) {\n          deltaY = i.containerHeight;\n        } else {\n          deltaY = -i.containerHeight;\n        }\n        break;\n      case 33: // page up\n        deltaY = i.containerHeight;\n        break;\n      case 34: // page down\n        deltaY = -i.containerHeight;\n        break;\n      case 36: // home\n        deltaY = i.contentHeight;\n        break;\n      case 35: // end\n        deltaY = -i.contentHeight;\n        break;\n      default:\n        return;\n    }\n\n    if (i.settings.suppressScrollX && deltaX !== 0) {\n      return;\n    }\n    if (i.settings.suppressScrollY && deltaY !== 0) {\n      return;\n    }\n\n    element.scrollTop -= deltaY;\n    element.scrollLeft += deltaX;\n    updateGeometry(i);\n\n    if (shouldPreventDefault(deltaX, deltaY)) {\n      e.preventDefault();\n    }\n  });\n}\n","import * as CSS from '../lib/css';\nimport cls from '../lib/class-names';\nimport updateGeometry from '../update-geometry';\nimport { env } from '../lib/util';\n\nexport default function(i) {\n  const element = i.element;\n\n  let shouldPrevent = false;\n\n  function shouldPreventDefault(deltaX, deltaY) {\n    const roundedScrollTop = Math.floor(element.scrollTop);\n    const isTop = element.scrollTop === 0;\n    const isBottom =\n      roundedScrollTop + element.offsetHeight === element.scrollHeight;\n    const isLeft = element.scrollLeft === 0;\n    const isRight =\n      element.scrollLeft + element.offsetWidth === element.scrollWidth;\n\n    let hitsBound;\n\n    // pick axis with primary direction\n    if (Math.abs(deltaY) > Math.abs(deltaX)) {\n      hitsBound = isTop || isBottom;\n    } else {\n      hitsBound = isLeft || isRight;\n    }\n\n    return hitsBound ? !i.settings.wheelPropagation : true;\n  }\n\n  function getDeltaFromEvent(e) {\n    let deltaX = e.deltaX;\n    let deltaY = -1 * e.deltaY;\n\n    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {\n      // OS X Safari\n      deltaX = (-1 * e.wheelDeltaX) / 6;\n      deltaY = e.wheelDeltaY / 6;\n    }\n\n    if (e.deltaMode && e.deltaMode === 1) {\n      // Firefox in deltaMode 1: Line scrolling\n      deltaX *= 10;\n      deltaY *= 10;\n    }\n\n    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {\n      // IE in some mouse drivers\n      deltaX = 0;\n      deltaY = e.wheelDelta;\n    }\n\n    if (e.shiftKey) {\n      // reverse axis with shift key\n      return [-deltaY, -deltaX];\n    }\n    return [deltaX, deltaY];\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    // FIXME: this is a workaround for <select> issue in FF and IE #571\n    if (!env.isWebKit && element.querySelector('select:focus')) {\n      return true;\n    }\n\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    let cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      const style = CSS.get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function mousewheelHandler(e) {\n    const [deltaX, deltaY] = getDeltaFromEvent(e);\n\n    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {\n      return;\n    }\n\n    let shouldPrevent = false;\n    if (!i.settings.useBothWheelAxes) {\n      // deltaX will only be used for horizontal scrolling and deltaY will\n      // only be used for vertical scrolling - this is the default\n      element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      element.scrollLeft += deltaX * i.settings.wheelSpeed;\n    } else if (i.scrollbarYActive && !i.scrollbarXActive) {\n      // only vertical scrollbar is active and useBothWheelAxes option is\n      // active, so let's scroll vertical bar using both mouse wheel axes\n      if (deltaY) {\n        element.scrollTop -= deltaY * i.settings.wheelSpeed;\n      } else {\n        element.scrollTop += deltaX * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    } else if (i.scrollbarXActive && !i.scrollbarYActive) {\n      // useBothWheelAxes and only horizontal bar is active, so use both\n      // wheel axes for horizontal bar\n      if (deltaX) {\n        element.scrollLeft += deltaX * i.settings.wheelSpeed;\n      } else {\n        element.scrollLeft -= deltaY * i.settings.wheelSpeed;\n      }\n      shouldPrevent = true;\n    }\n\n    updateGeometry(i);\n\n    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);\n    if (shouldPrevent && !e.ctrlKey) {\n      e.stopPropagation();\n      e.preventDefault();\n    }\n  }\n\n  if (typeof window.onwheel !== 'undefined') {\n    i.event.bind(element, 'wheel', mousewheelHandler);\n  } else if (typeof window.onmousewheel !== 'undefined') {\n    i.event.bind(element, 'mousewheel', mousewheelHandler);\n  }\n}\n","import updateGeometry from '../update-geometry';\nimport cls from '../lib/class-names';\nimport * as CSS from '../lib/css';\nimport { env } from '../lib/util';\n\nexport default function(i) {\n  if (!env.supportsTouch && !env.supportsIePointer) {\n    return;\n  }\n\n  const element = i.element;\n\n  function shouldPrevent(deltaX, deltaY) {\n    const scrollTop = Math.floor(element.scrollTop);\n    const scrollLeft = element.scrollLeft;\n    const magnitudeX = Math.abs(deltaX);\n    const magnitudeY = Math.abs(deltaY);\n\n    if (magnitudeY > magnitudeX) {\n      // user is perhaps trying to swipe up/down the page\n\n      if (\n        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||\n        (deltaY > 0 && scrollTop === 0)\n      ) {\n        // set prevent for mobile Chrome refresh\n        return window.scrollY === 0 && deltaY > 0 && env.isChrome;\n      }\n    } else if (magnitudeX > magnitudeY) {\n      // user is perhaps trying to swipe left/right across the page\n\n      if (\n        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||\n        (deltaX > 0 && scrollLeft === 0)\n      ) {\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function applyTouchMove(differenceX, differenceY) {\n    element.scrollTop -= differenceY;\n    element.scrollLeft -= differenceX;\n\n    updateGeometry(i);\n  }\n\n  let startOffset = {};\n  let startTime = 0;\n  let speed = {};\n  let easingLoop = null;\n\n  function getTouch(e) {\n    if (e.targetTouches) {\n      return e.targetTouches[0];\n    } else {\n      // Maybe IE pointer\n      return e;\n    }\n  }\n\n  function shouldHandle(e) {\n    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {\n      return false;\n    }\n    if (e.targetTouches && e.targetTouches.length === 1) {\n      return true;\n    }\n    if (\n      e.pointerType &&\n      e.pointerType !== 'mouse' &&\n      e.pointerType !== e.MSPOINTER_TYPE_MOUSE\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  function touchStart(e) {\n    if (!shouldHandle(e)) {\n      return;\n    }\n\n    const touch = getTouch(e);\n\n    startOffset.pageX = touch.pageX;\n    startOffset.pageY = touch.pageY;\n\n    startTime = new Date().getTime();\n\n    if (easingLoop !== null) {\n      clearInterval(easingLoop);\n    }\n  }\n\n  function shouldBeConsumedByChild(target, deltaX, deltaY) {\n    if (!element.contains(target)) {\n      return false;\n    }\n\n    let cursor = target;\n\n    while (cursor && cursor !== element) {\n      if (cursor.classList.contains(cls.element.consuming)) {\n        return true;\n      }\n\n      const style = CSS.get(cursor);\n\n      // if deltaY && vertical scrollable\n      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {\n        const maxScrollTop = cursor.scrollHeight - cursor.clientHeight;\n        if (maxScrollTop > 0) {\n          if (\n            (cursor.scrollTop > 0 && deltaY < 0) ||\n            (cursor.scrollTop < maxScrollTop && deltaY > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n      // if deltaX && horizontal scrollable\n      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {\n        const maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;\n        if (maxScrollLeft > 0) {\n          if (\n            (cursor.scrollLeft > 0 && deltaX < 0) ||\n            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)\n          ) {\n            return true;\n          }\n        }\n      }\n\n      cursor = cursor.parentNode;\n    }\n\n    return false;\n  }\n\n  function touchMove(e) {\n    if (shouldHandle(e)) {\n      const touch = getTouch(e);\n\n      const currentOffset = { pageX: touch.pageX, pageY: touch.pageY };\n\n      const differenceX = currentOffset.pageX - startOffset.pageX;\n      const differenceY = currentOffset.pageY - startOffset.pageY;\n\n      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {\n        return;\n      }\n\n      applyTouchMove(differenceX, differenceY);\n      startOffset = currentOffset;\n\n      const currentTime = new Date().getTime();\n\n      const timeGap = currentTime - startTime;\n      if (timeGap > 0) {\n        speed.x = differenceX / timeGap;\n        speed.y = differenceY / timeGap;\n        startTime = currentTime;\n      }\n\n      if (shouldPrevent(differenceX, differenceY)) {\n        e.preventDefault();\n      }\n    }\n  }\n  function touchEnd() {\n    if (i.settings.swipeEasing) {\n      clearInterval(easingLoop);\n      easingLoop = setInterval(function() {\n        if (i.isInitialized) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (!speed.x && !speed.y) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {\n          clearInterval(easingLoop);\n          return;\n        }\n\n        applyTouchMove(speed.x * 30, speed.y * 30);\n\n        speed.x *= 0.8;\n        speed.y *= 0.8;\n      }, 10);\n    }\n  }\n\n  if (env.supportsTouch) {\n    i.event.bind(element, 'touchstart', touchStart);\n    i.event.bind(element, 'touchmove', touchMove);\n    i.event.bind(element, 'touchend', touchEnd);\n  } else if (env.supportsIePointer) {\n    if (window.PointerEvent) {\n      i.event.bind(element, 'pointerdown', touchStart);\n      i.event.bind(element, 'pointermove', touchMove);\n      i.event.bind(element, 'pointerup', touchEnd);\n    } else if (window.MSPointerEvent) {\n      i.event.bind(element, 'MSPointerDown', touchStart);\n      i.event.bind(element, 'MSPointerMove', touchMove);\n      i.event.bind(element, 'MSPointerUp', touchEnd);\n    }\n  }\n}\n"]}